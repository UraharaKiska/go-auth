syntax = "proto3";

package auth_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/UraharaKiska/go-auth/pkg/auth_v1;auth_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Auth API"
    version: "1.0.0"
    contact: {
      name: "Ichigo Kurasaki"
    };
  };

  host: "localhost:8081",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "applications/json",
};

service UserV1 {
  // Создать пользователя
  rpc Create(CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/api/v1/user"
      body: "*"
    };
  }
  // Получить данные пользователя
  rpc Get(GetRequest) returns (GetResponse){
    option (google.api.http) = {
      get: "/api/v1/user"
    };
  }
  // Обновить информацию и пользователе
  rpc Update(UpdateRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/api/v1/user"
      body: "*"
    };
  }
  // Удалить пользователя
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/api/v1/user"
    };
  }
}

enum EnumRole {
    user = 0;
    admin = 1;
}

message UserInfo {
  string name = 1 [(validate.rules).string = {min_len: 2, max_len: 50}]; 
  string email = 2;
  string password = 3 [(validate.rules).string = {min_len: 6, max_len: 50}];;
  string password_confirm = 4 [(validate.rules).string = {min_len: 6, max_len: 50}];;
  EnumRole role = 5;
}


message User {
  int64 id = 1;
  UserInfo info = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message UpdateUserInfo {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue email = 2;
}

message UserInfoSecure {
  string name = 1;
  string email = 2;
  EnumRole role = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
}

message CreateRequest {
  UserInfo info = 1;
}

message CreateResponse {
  int64 id = 1;
}

message GetRequest {
  int64 id = 1;
}

message GetResponse {
  UserInfoSecure info = 1;
}

message UpdateRequest {
  int64 id = 1;
  UpdateUserInfo info = 2;
}

message DeleteRequest {
  int64 id = 1;
}


service AuthV1 {

  rpc Login(LoginRequest) returns (LoginResponse){
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  }
  rpc GetRefreshToken(GetRefreshTokenRequest) returns (GetRefreshTokenResponse){
    option (google.api.http) = {
      post: "/api/v1/refresh"
      body: "*"
    };
  }
  rpc GetAccessToken(GetAccessTokenRequest) returns (GetAccessTokenResponse){
    option (google.api.http) = {
      post: "/api/v1/access"
      body: "*"
    };
  }

}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string refresh_token = 1;
}

message GetRefreshTokenRequest {
  string refresh_token = 1;
}

message GetRefreshTokenResponse {
  string refresh_token = 1;
}

message GetAccessTokenRequest {
  string refresh_token = 1;
}

message GetAccessTokenResponse {
  string access_token = 1;
}